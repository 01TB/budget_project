# Generated by Django 5.1.6 on 2025-05-11 11:01

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AccessType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Internal identifier, e.g., car_access_parking",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="User-friendly display name, e.g., Car Access + Parking",
                        max_length=100,
                    ),
                ),
            ],
            options={
                "verbose_name": "Access Type",
                "verbose_name_plural": "Access Types",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Convenience",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Internal identifier, e.g., has_garage, internet_access",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="User-friendly display name, e.g., Garage, Internet Access",
                        max_length=100,
                    ),
                ),
            ],
            options={
                "verbose_name": "Convenience",
                "verbose_name_plural": "Conveniences",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="PaperType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Internal identifier, e.g., titre_propriete",
                        max_length=50,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="User-friendly display name, e.g., Titre de propriété (French)",
                        max_length=100,
                    ),
                ),
            ],
            options={
                "verbose_name": "Paper Type",
                "verbose_name_plural": "Paper Types",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Town",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Town",
                "verbose_name_plural": "Towns",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="RentalProperty",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "property_type",
                    models.CharField(
                        choices=[("apartment", "Apartment"), ("house", "House")],
                        max_length=20,
                    ),
                ),
                (
                    "num_rooms",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Actual rent price for training data",
                        max_digits=12,
                    ),
                ),
                (
                    "apartment_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("", "---------"),
                            ("T1", "T1"),
                            ("T2", "T2"),
                            ("T3", "T3"),
                            ("T4", "T4"),
                            ("T5", "T5"),
                            ("T6", "T6"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "house_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("", "---------"),
                            ("F1", "F1"),
                            ("F2", "F2"),
                            ("F3", "F3"),
                            ("F4", "F4"),
                            ("F5", "F5"),
                            ("F6", "F6"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "has_house_basement",
                    models.BooleanField(
                        default=False,
                        help_text="Is there a basement (specific to houses)?",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "access_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="predictor_app.accesstype",
                    ),
                ),
                (
                    "conveniences",
                    models.ManyToManyField(blank=True, to="predictor_app.convenience"),
                ),
                (
                    "town",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rental_properties",
                        to="predictor_app.town",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rental Property",
                "verbose_name_plural": "Rental Properties",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="LandForSale",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_fenced", models.BooleanField(default=False)),
                ("is_ready_to_build", models.BooleanField(default=False)),
                (
                    "area_sqm",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Area in square meters",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Actual sale price for training data",
                        max_digits=14,
                    ),
                ),
                (
                    "price_per_sqm",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        editable=False,
                        help_text="Price per Square Meter (auto-calculated)",
                        max_digits=12,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "access_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="predictor_app.accesstype",
                    ),
                ),
                (
                    "paper_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="predictor_app.papertype",
                    ),
                ),
                (
                    "town",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lands_for_sale",
                        to="predictor_app.town",
                    ),
                ),
            ],
            options={
                "verbose_name": "Land For Sale",
                "verbose_name_plural": "Lands For Sale",
                "ordering": ["-created_at"],
            },
        ),
    ]
